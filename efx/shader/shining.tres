[gd_resource type="ShaderMaterial" load_steps=18 format=2]

[ext_resource path="res://ui/textures/info/tool_slot.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=59]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=60]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=61]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=62]
operator = 9

[sub_resource type="VisualShaderNodeScalarOp" id=63]
default_input_values = [ 0, 0.0, 1, -0.12 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=64]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeColorConstant" id=66]
constant = Color( 0.745098, 0.745098, 0.745098, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=67]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorOp" id=68]

[sub_resource type="VisualShaderNodeInput" id=53]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=54]
source = 2

[sub_resource type="VisualShaderNodeTexture" id=55]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=56]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=57]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=58]
default_input_values = [ 0, 0.0, 1, 0.4 ]
operator = 9

[sub_resource type="VisualShader" id=52]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out6p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarOp:8
	float n_in8p1 = 0.40000;
	float n_out8p0 = step(dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)), n_in8p1);

// Input:10
	float n_out10p0 = TIME;

// ScalarFunc:11
	float n_out11p0 = sin(n_out10p0);

// ScalarFunc:12
	float n_out12p0 = abs(n_out11p0);

// ScalarOp:14
	float n_in14p1 = -0.12000;
	float n_out14p0 = n_out12p0 - n_in14p1;

// ScalarOp:13
	float n_out13p0 = step(dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)), n_out14p0);

// ScalarOp:15
	float n_out15p0 = n_out8p0 - n_out13p0;

// Color:17
	vec3 n_out17p0 = vec3(0.745098, 0.745098, 0.745098);
	float n_out17p1 = 1.000000;

// VectorOp:18
	vec3 n_out18p0 = vec3(n_out15p0) * n_out17p0;

// ColorOp:19
	vec3 n_out19p0 = vec3(1.0) - (vec3(1.0) - n_out4p0) * (vec3(1.0) - n_out18p0);

// ScalarOp:7
	float n_out7p0 = n_out4p1 * n_out8p0;

// Output:0
	COLOR.rgb = n_out19p0;
	COLOR.a = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -333.734, 157.596 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1540, 280 )
nodes/fragment/3/node = SubResource( 53 )
nodes/fragment/3/position = Vector2( -60, 160 )
nodes/fragment/4/node = SubResource( 54 )
nodes/fragment/4/position = Vector2( 180, 140 )
nodes/fragment/5/node = SubResource( 55 )
nodes/fragment/5/position = Vector2( 160, 320 )
nodes/fragment/6/node = SubResource( 56 )
nodes/fragment/6/position = Vector2( -40, 440 )
nodes/fragment/7/node = SubResource( 57 )
nodes/fragment/7/position = Vector2( 680, 280 )
nodes/fragment/8/node = SubResource( 58 )
nodes/fragment/8/position = Vector2( 420, 360 )
nodes/fragment/10/node = SubResource( 59 )
nodes/fragment/10/position = Vector2( -260, 580 )
nodes/fragment/11/node = SubResource( 60 )
nodes/fragment/11/position = Vector2( -40, 580 )
nodes/fragment/12/node = SubResource( 61 )
nodes/fragment/12/position = Vector2( 180, 580 )
nodes/fragment/13/node = SubResource( 62 )
nodes/fragment/13/position = Vector2( 620, 500 )
nodes/fragment/14/node = SubResource( 63 )
nodes/fragment/14/position = Vector2( 420, 560 )
nodes/fragment/15/node = SubResource( 64 )
nodes/fragment/15/position = Vector2( 873.967, 442.922 )
nodes/fragment/17/node = SubResource( 66 )
nodes/fragment/17/position = Vector2( 900, 700 )
nodes/fragment/18/node = SubResource( 67 )
nodes/fragment/18/position = Vector2( 1140, 460 )
nodes/fragment/19/node = SubResource( 68 )
nodes/fragment/19/position = Vector2( 1320, 140 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 6, 0, 5, 0, 4, 1, 7, 0, 5, 0, 8, 0, 8, 0, 7, 1, 10, 0, 11, 0, 11, 0, 12, 0, 5, 0, 13, 0, 14, 0, 13, 1, 8, 0, 15, 0, 13, 0, 15, 1, 15, 0, 18, 0, 17, 0, 18, 1, 4, 0, 19, 0, 18, 0, 19, 1, 19, 0, 0, 0, 7, 0, 0, 1, 12, 0, 14, 0 )

[resource]
shader = SubResource( 52 )
